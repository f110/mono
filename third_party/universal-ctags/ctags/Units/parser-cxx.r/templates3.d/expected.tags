makeArrayRef	input.cpp	/^makeArrayRef(ValueType (&p_data)[N], SizeType& p_size)$/;"	f	typeref:typename:boost::disable_if_c<N==1,ArrayRef<ValueType,SizeType>>::type	template:<typename ValueType,int N,typename SizeType>
ValueType	input.cpp	/^template <typename ValueType, int N, typename SizeType>$/;"	Z	function:makeArrayRef	typeref:meta:typename
N	input.cpp	/^template <typename ValueType, int N, typename SizeType>$/;"	Z	function:makeArrayRef	typeref:typename:int
SizeType	input.cpp	/^template <typename ValueType, int N, typename SizeType>$/;"	Z	function:makeArrayRef	typeref:meta:typename
p_data	input.cpp	/^makeArrayRef(ValueType (&p_data)[N], SizeType& p_size)$/;"	z	function:makeArrayRef	typeref:typename:ValueType (&)[N]	file:
p_size	input.cpp	/^makeArrayRef(ValueType (&p_data)[N], SizeType& p_size)$/;"	z	function:makeArrayRef	typeref:typename:SizeType &	file:
foo	input.cpp	/^void foo()$/;"	f	typeref:typename:void
