# case sensitive
f	input.hxx	/^int f ( int,  int,  int);$/;"	signature:(int,int,int)
f	input.hxx	/^int f ( int, char,  int);$/;"	signature:(int,char,int)
f	input.hxx	/^int f (char,  int, char);$/;"	signature:(char,int,char)
f	input.hxx	/^int f (char, char, char);$/;"	signature:(char,char,char)
# case insensitive: the pattern is lower case
f	input.hxx	/^int f ( int,  int,  int);$/;"	signature:(int,int,int)
f	input.hxx	/^int f ( int, char,  int);$/;"	signature:(int,char,int)
f	input.hxx	/^int f (char,  int, char);$/;"	signature:(char,int,char)
f	input.hxx	/^int f (char, char, char);$/;"	signature:(char,char,char)
g	input.hxx	/^int g ( INT,  INT,  INT);$/;"	signature:(INT,INT,INT)
g	input.hxx	/^int g ( INT, CHAR,  INT);$/;"	signature:(INT,CHAR,INT)
g	input.hxx	/^int g (CHAR,  INT, CHAR);$/;"	signature:(CHAR,INT,CHAR)
g	input.hxx	/^int g (CHAR, CHAR, CHAR);$/;"	signature:(CHAR,CHAR,CHAR)
# case insensitive: the pattern is upper case
f	input.hxx	/^int f ( int,  int,  int);$/;"	signature:(int,int,int)
f	input.hxx	/^int f ( int, char,  int);$/;"	signature:(int,char,int)
f	input.hxx	/^int f (char,  int, char);$/;"	signature:(char,int,char)
f	input.hxx	/^int f (char, char, char);$/;"	signature:(char,char,char)
g	input.hxx	/^int g ( INT,  INT,  INT);$/;"	signature:(INT,INT,INT)
g	input.hxx	/^int g ( INT, CHAR,  INT);$/;"	signature:(INT,CHAR,INT)
g	input.hxx	/^int g (CHAR,  INT, CHAR);$/;"	signature:(CHAR,INT,CHAR)
g	input.hxx	/^int g (CHAR, CHAR, CHAR);$/;"	signature:(CHAR,CHAR,CHAR)
# case sensitive (string->regexp)
f	input.hxx	/^int f ( int,  int,  int);$/;"	signature:(int,int,int)
f	input.hxx	/^int f ( int, char,  int);$/;"	signature:(int,char,int)
f	input.hxx	/^int f (char,  int, char);$/;"	signature:(char,int,char)
f	input.hxx	/^int f (char, char, char);$/;"	signature:(char,char,char)
# case sensitive (string->regexp :case-fold #f)
f	input.hxx	/^int f ( int,  int,  int);$/;"	signature:(int,int,int)
f	input.hxx	/^int f ( int, char,  int);$/;"	signature:(int,char,int)
f	input.hxx	/^int f (char,  int, char);$/;"	signature:(char,int,char)
f	input.hxx	/^int f (char, char, char);$/;"	signature:(char,char,char)
# case sensitive (string->regexp :case-fold false)
f	input.hxx	/^int f ( int,  int,  int);$/;"	signature:(int,int,int)
f	input.hxx	/^int f ( int, char,  int);$/;"	signature:(int,char,int)
f	input.hxx	/^int f (char,  int, char);$/;"	signature:(char,int,char)
f	input.hxx	/^int f (char, char, char);$/;"	signature:(char,char,char)
# case insensitive: the pattern is lower case (string->regexp :case-fold #t)
f	input.hxx	/^int f ( int,  int,  int);$/;"	signature:(int,int,int)
f	input.hxx	/^int f ( int, char,  int);$/;"	signature:(int,char,int)
f	input.hxx	/^int f (char,  int, char);$/;"	signature:(char,int,char)
f	input.hxx	/^int f (char, char, char);$/;"	signature:(char,char,char)
g	input.hxx	/^int g ( INT,  INT,  INT);$/;"	signature:(INT,INT,INT)
g	input.hxx	/^int g ( INT, CHAR,  INT);$/;"	signature:(INT,CHAR,INT)
g	input.hxx	/^int g (CHAR,  INT, CHAR);$/;"	signature:(CHAR,INT,CHAR)
g	input.hxx	/^int g (CHAR, CHAR, CHAR);$/;"	signature:(CHAR,CHAR,CHAR)
# case insensitive: the pattern is upper case (string->regexp :case-fold true)
f	input.hxx	/^int f ( int,  int,  int);$/;"	signature:(int,int,int)
f	input.hxx	/^int f ( int, char,  int);$/;"	signature:(int,char,int)
f	input.hxx	/^int f (char,  int, char);$/;"	signature:(char,int,char)
f	input.hxx	/^int f (char, char, char);$/;"	signature:(char,char,char)
g	input.hxx	/^int g ( INT,  INT,  INT);$/;"	signature:(INT,INT,INT)
g	input.hxx	/^int g ( INT, CHAR,  INT);$/;"	signature:(INT,CHAR,INT)
g	input.hxx	/^int g (CHAR,  INT, CHAR);$/;"	signature:(CHAR,INT,CHAR)
g	input.hxx	/^int g (CHAR, CHAR, CHAR);$/;"	signature:(CHAR,CHAR,CHAR)
