# (eq? "c" (downcase $name))
C	input.cpp	/^class C: A, B {$/
# (and $inherits (#/(^|,)a(,|$)/ (downcase $inherits)))
C	input.cpp	/^class C: A, B {$/
# (and $inherits (#/(^|,)b(,|$)/ (downcase $inherits)))
C	input.cpp	/^class C: A, B {$/
# (and $inherits (#/(^|,)d(,|$)/ (downcase $inherits)))
# (eq? "F" (upcase $name))
f	input.cpp	/^  int f (void) {$/
# (eq? "G" (upcase $name))
g	input.cpp	/^  int g (void) {$/
# (eq? "J" (upcase $name))
