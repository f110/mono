load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "prometheus",
    srcs = [
        "build_info_collector.go",
        "collector.go",
        "counter.go",
        "desc.go",
        "doc.go",
        "expvar_collector.go",
        "fnv.go",
        "gauge.go",
        "get_pid.go",
        "go_collector.go",
        "go_collector_go116.go",
        "go_collector_latest.go",
        "histogram.go",
        "labels.go",
        "metric.go",
        "num_threads.go",
        "observer.go",
        "process_collector.go",
        "process_collector_js.go",
        "process_collector_other.go",
        "process_collector_windows.go",
        "registry.go",
        "summary.go",
        "timer.go",
        "untyped.go",
        "value.go",
        "vec.go",
        "wrap.go",
    ],
    importmap = "github.com/buchgr/bazel-remote/v2/vendor/github.com/prometheus/client_golang/prometheus",
    importpath = "github.com/prometheus/client_golang/prometheus",
    visibility = ["//visibility:public"],
    deps = [
        "//third_party/bazel-remote/vendor/github.com/beorn7/perks/quantile",
        "//third_party/bazel-remote/vendor/github.com/cespare/xxhash/v2:xxhash",
        "//third_party/bazel-remote/vendor/github.com/golang/protobuf/proto",
        "//third_party/bazel-remote/vendor/github.com/prometheus/client_golang/prometheus/internal",
        "//third_party/bazel-remote/vendor/github.com/prometheus/client_model/go",
        "//third_party/bazel-remote/vendor/github.com/prometheus/common/expfmt",
        "//third_party/bazel-remote/vendor/github.com/prometheus/common/model",
        "//third_party/bazel-remote/vendor/google.golang.org/protobuf/types/known/timestamppb",
    ] + select({
        "@io_bazel_rules_go//go/platform:aix": [
            "//third_party/bazel-remote/vendor/github.com/prometheus/procfs",
        ],
        "@io_bazel_rules_go//go/platform:android": [
            "//third_party/bazel-remote/vendor/github.com/prometheus/procfs",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "//third_party/bazel-remote/vendor/github.com/prometheus/procfs",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "//third_party/bazel-remote/vendor/github.com/prometheus/procfs",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "//third_party/bazel-remote/vendor/github.com/prometheus/procfs",
        ],
        "@io_bazel_rules_go//go/platform:illumos": [
            "//third_party/bazel-remote/vendor/github.com/prometheus/procfs",
        ],
        "@io_bazel_rules_go//go/platform:ios": [
            "//third_party/bazel-remote/vendor/github.com/prometheus/procfs",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "//third_party/bazel-remote/vendor/github.com/prometheus/procfs",
        ],
        "@io_bazel_rules_go//go/platform:netbsd": [
            "//third_party/bazel-remote/vendor/github.com/prometheus/procfs",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "//third_party/bazel-remote/vendor/github.com/prometheus/procfs",
        ],
        "@io_bazel_rules_go//go/platform:plan9": [
            "//third_party/bazel-remote/vendor/github.com/prometheus/procfs",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "//third_party/bazel-remote/vendor/github.com/prometheus/procfs",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "//third_party/bazel-remote/vendor/golang.org/x/sys/windows",
        ],
        "//conditions:default": [],
    }),
)
