bazel_dep(name = "rules_go", version = "0.57.0")
bazel_dep(name = "gazelle", version = "0.45.0")
bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "protobuf", version = "32.1")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "rules_oci", version = "2.2.6")
bazel_dep(name = "aspect_bazel_lib", version = "2.21.1")
bazel_dep(name = "rules_python", version = "1.6.1")
bazel_dep(name = "protoc_ddl", version = "0.0.0")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")

go_deps.from_file(go_mod = "//:go.mod")

go_deps.gazelle_override(
    build_file_generation = "clean",
    path = "github.com/pingcap/tidb/pkg/parser",
)

go_deps.gazelle_override(
    build_file_generation = "clean",
    path = "go.f110.dev/xerrors",
)

go_deps.gazelle_override(
    build_file_generation = "clean",
    path = "go.f110.dev/go-memcached",
)

go_deps.gazelle_override(
    build_file_generation = "clean",
    path = "cel.dev/expr",
)

go_deps.gazelle_override(
    build_extra_args = ["-proto=disable"],
    path = "go.etcd.io/etcd/api/v3",
)

use_repo(
    go_deps,
    "com_github_aws_aws_sdk_go_v2",
    "com_github_aws_aws_sdk_go_v2_credentials",
    "com_github_aws_aws_sdk_go_v2_feature_s3_manager",
    "com_github_aws_aws_sdk_go_v2_service_s3",
    "com_github_aws_smithy_go",
    "com_github_bazelbuild_buildtools",
    "com_github_blang_semver_v4",
    "com_github_burntsushi_xgb",
    "com_github_fsnotify_fsnotify",
    "com_github_go_ble_ble",
    "com_github_go_git_go_git_v5",
    "com_github_go_sql_driver_mysql",
    "com_github_golang_jwt_jwt_v4",
    "com_github_golang_jwt_jwt_v5",
    "com_github_google_go_cmp",
    "com_github_google_go_containerregistry",
    "com_github_google_go_github_v49",
    "com_github_google_go_github_v73",
    "com_github_google_nixery",
    "com_github_google_uuid",
    "com_github_google_zoekt",
    "com_github_gorilla_mux",
    "com_github_hashicorp_consul_api",
    "com_github_im7mortal_kmutex",
    "com_github_jarcoal_httpmock",
    "com_github_juullabs_oss_cbgo",
    "com_github_masterminds_semver_v3",
    "com_github_mattn_go_shellwords",
    "com_github_minio_madmin_go_v3",
    "com_github_minio_minio_go_v7",
    "com_github_minio_minio_operator",
    "com_github_nats_io_nats_go",
    "com_github_nissy_bon",
    "com_github_peco_peco",
    "com_github_prometheus_client_golang",
    "com_github_prometheus_client_model",
    "com_github_prometheus_common",
    "com_github_protonmail_go_crypto",
    "com_github_robfig_cron_v3",
    "com_github_shirou_gopsutil_v3",
    "com_github_shurcool_githubv4",
    "com_github_sirupsen_logrus",
    "com_github_spf13_pflag",
    "com_github_stretchr_testify",
    "com_github_yuin_goldmark",
    "com_github_yuin_goldmark_highlighting",
    "com_github_zitadel_oidc_v3",
    "com_google_cloud_go_storage",
    "com_sslmate_software_src_go_pkcs12",
    "dev_abhg_go_goldmark_mermaid",
    "dev_f110_go_go_memcached",
    "dev_f110_go_notion_api_v3",
    "dev_f110_go_xerrors",
    "in_gopkg_yaml_v3",
    "io_etcd_go_etcd_client_v3",
    "io_k8s_api",
    "io_k8s_apimachinery",
    "io_k8s_client_go",
    "io_k8s_component_base",
    "io_k8s_gengo",
    "io_k8s_klog_v2",
    "io_k8s_sigs_kind",
    "io_k8s_sigs_secrets_store_csi_driver",
    "net_starlark_go",
    "org_golang_google_api",
    "org_golang_google_genproto_googleapis_rpc",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
    "org_golang_x_crypto",
    "org_golang_x_mod",
    "org_golang_x_net",
    "org_golang_x_oauth2",
    "org_golang_x_term",
    "org_golang_x_tools_go_vcs",
    "org_uber_go_zap",
)

go_deps.module_override(
    patch_strip = 5,
    patches = [
        "//patch:fix-minio-operator-group-name.patch",
        "//patch:fix-minio-operator-schemagroupversion.patch",
    ],
    path = "github.com/minio/minio-operator",
)

git_repository = use_repo_rule("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

kind_binary = use_repo_rule("//build/rules/kind:def.bzl", "kind_binary")

kustomize_binary = use_repo_rule("//build/rules/kustomize:def.bzl", "kustomize_binary")

vault_binary = use_repo_rule("//build/rules/vault:def.bzl", "vault_binary")

minio_binary = use_repo_rule("//build/rules/minio:def.bzl", "minio_binary")

etcd_binary = use_repo_rule("//build/rules/etcd:def.bzl", "etcd_binary")

git_override(
    commit = "0d4d02686e470e43f95d395ac204121103b03f66",
    module_name = "protoc_ddl",
    patch_strip = 1,
    patches = ["//patch:protoc-ddl.patch"],
    remote = "https://github.com/f110/protoc-ddl",
)

git_repository(
    name = "dev_f110_kubeproto",
    commit = "4993655b87e3ee877420469e47d26460050161a4",
    remote = "https://github.com/f110/kubeproto",
)

kind_binary(
    name = "kind",
    version = "0.22.0",
)

kustomize_binary(
    name = "kustomize",
    version = "v4.5.4",
)

vault_binary(
    name = "vault",
    version = "1.11.4",
)

minio_binary(
    name = "minio",
    version = "RELEASE.2022-12-02T19-19-22Z",
)

etcd_binary(
    name = "etcd",
    version = "3.5.6",
)
# -- repo definitions -- #

extension_for_oci_alias = use_extension("//:extension_for_oci_alias.bzl", "extension_for_oci_alias")

use_repo(extension_for_oci_alias, "com_google_distroless_base")
# End of extension `extension_for_oci_alias`

extension_for_oci_pull = use_extension("//:extension_for_oci_pull.bzl", "extension_for_oci_pull")

use_repo(extension_for_oci_pull, "com_google_distroless_base_single")
# End of extension `extension_for_oci_pull`

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")

pip.parse(
    hub_name = "pypi",
    python_version = "3.12",
    requirements_lock = "//:requirements.txt",
)

use_repo(pip, "pypi")

http_file = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_file")

http_file(
    name = "argocd_vault_plugin",
    sha256 = "957001f4bcd5db9aca468fbea9afa19d5088c06708fbcf97b07ba8e369447932",
    urls = ["https://github.com/argoproj-labs/argocd-vault-plugin/releases/download/v1.13.1/argocd-vault-plugin_1.13.1_linux_amd64"],
)

http_file(
    name = "bazel_remote",
    sha256 = "5e4b248262a56e389e9ee4212ffd0498746347fb5bf155785c9410ba2abc7b07",
    urls = ["https://github.com/buchgr/bazel-remote/releases/download/v2.4.1/bazel-remote-2.4.1-linux-x86_64"],
)
