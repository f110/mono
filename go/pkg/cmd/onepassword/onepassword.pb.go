// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.20.0--rc2
// source: go/pkg/cmd/onepassword/onepassword.proto

package onepassword

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Category  string                 `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Title     string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Url       string                 `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Password  string                 `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Item) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Item) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Item) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Item) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type RequestUnlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterPassword []byte `protobuf:"bytes,1,opt,name=master_password,json=masterPassword,proto3" json:"master_password,omitempty"`
}

func (x *RequestUnlock) Reset() {
	*x = RequestUnlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUnlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUnlock) ProtoMessage() {}

func (x *RequestUnlock) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUnlock.ProtoReflect.Descriptor instead.
func (*RequestUnlock) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{1}
}

func (x *RequestUnlock) GetMasterPassword() []byte {
	if x != nil {
		return x.MasterPassword
	}
	return nil
}

type ResponseUnlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ResponseUnlock) Reset() {
	*x = ResponseUnlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUnlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUnlock) ProtoMessage() {}

func (x *ResponseUnlock) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUnlock.ProtoReflect.Descriptor instead.
func (*ResponseUnlock) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseUnlock) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RequestLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestLock) Reset() {
	*x = RequestLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestLock) ProtoMessage() {}

func (x *RequestLock) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestLock.ProtoReflect.Descriptor instead.
func (*RequestLock) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{3}
}

type ResponseLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseLock) Reset() {
	*x = ResponseLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseLock) ProtoMessage() {}

func (x *ResponseLock) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseLock.ProtoReflect.Descriptor instead.
func (*ResponseLock) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{4}
}

type RequestUseVault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *RequestUseVault) Reset() {
	*x = RequestUseVault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestUseVault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestUseVault) ProtoMessage() {}

func (x *RequestUseVault) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestUseVault.ProtoReflect.Descriptor instead.
func (*RequestUseVault) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{5}
}

func (x *RequestUseVault) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ResponseUseVault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseUseVault) Reset() {
	*x = ResponseUseVault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUseVault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUseVault) ProtoMessage() {}

func (x *ResponseUseVault) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUseVault.ProtoReflect.Descriptor instead.
func (*ResponseUseVault) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{6}
}

type RequestInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestInfo) Reset() {
	*x = RequestInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestInfo) ProtoMessage() {}

func (x *RequestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestInfo.ProtoReflect.Descriptor instead.
func (*RequestInfo) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{7}
}

type ResponseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Locked bool   `protobuf:"varint,2,opt,name=locked,proto3" json:"locked,omitempty"`
}

func (x *ResponseInfo) Reset() {
	*x = ResponseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseInfo) ProtoMessage() {}

func (x *ResponseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseInfo.ProtoReflect.Descriptor instead.
func (*ResponseInfo) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{8}
}

func (x *ResponseInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ResponseInfo) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

type RequestList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RequestList) Reset() {
	*x = RequestList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestList) ProtoMessage() {}

func (x *RequestList) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestList.ProtoReflect.Descriptor instead.
func (*RequestList) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{9}
}

type ResponseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ResponseList) Reset() {
	*x = ResponseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseList) ProtoMessage() {}

func (x *ResponseList) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseList.ProtoReflect.Descriptor instead.
func (*ResponseList) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{10}
}

func (x *ResponseList) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type RequestGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *RequestGet) Reset() {
	*x = RequestGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGet) ProtoMessage() {}

func (x *RequestGet) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGet.ProtoReflect.Descriptor instead.
func (*RequestGet) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{11}
}

func (x *RequestGet) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ResponseGet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *Item `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ResponseGet) Reset() {
	*x = ResponseGet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGet) ProtoMessage() {}

func (x *ResponseGet) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGet.ProtoReflect.Descriptor instead.
func (*ResponseGet) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{12}
}

func (x *ResponseGet) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type RequestSetClipboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *RequestSetClipboard) Reset() {
	*x = RequestSetClipboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestSetClipboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestSetClipboard) ProtoMessage() {}

func (x *RequestSetClipboard) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestSetClipboard.ProtoReflect.Descriptor instead.
func (*RequestSetClipboard) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{13}
}

func (x *RequestSetClipboard) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ResponseSetClipboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResponseSetClipboard) Reset() {
	*x = ResponseSetClipboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseSetClipboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseSetClipboard) ProtoMessage() {}

func (x *ResponseSetClipboard) ProtoReflect() protoreflect.Message {
	mi := &file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseSetClipboard.ProtoReflect.Descriptor instead.
func (*ResponseSetClipboard) Descriptor() ([]byte, []int) {
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP(), []int{14}
}

var File_go_pkg_cmd_onepassword_onepassword_proto protoreflect.FileDescriptor

var file_go_pkg_cmd_onepassword_onepassword_proto_rawDesc = []byte{
	0x0a, 0x28, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6d, 0x64, 0x2f, 0x6f, 0x6e, 0x65,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2f, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6d, 0x6f, 0x6e, 0x6f,
	0x2e, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x01,
	0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x38, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2a, 0x0a, 0x0e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x22, 0x25, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x12, 0x0a, 0x10,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3c, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f,
	0x2e, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x20, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x0b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x6f,
	0x6e, 0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x29, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x74, 0x43,
	0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x32, 0xa5, 0x04, 0x0a, 0x0b, 0x4f, 0x6e, 0x65,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x4b, 0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x1f, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x1a, 0x20, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x6f, 0x6e, 0x65, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x45, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x1a, 0x1e, 0x2e, 0x6d,
	0x6f, 0x6e, 0x6f, 0x2e, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x51, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e,
	0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x6f,
	0x6e, 0x6f, 0x2e, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x45, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x6f,
	0x6e, 0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x1e, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x6f, 0x6e,
	0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x45, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d,
	0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a,
	0x03, 0x47, 0x65, 0x74, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x6f, 0x6e, 0x65, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65,
	0x74, 0x12, 0x5d, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0x25, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e, 0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x74, 0x43,
	0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x1a, 0x26, 0x2e, 0x6d, 0x6f, 0x6e, 0x6f, 0x2e,
	0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x42, 0x29, 0x5a, 0x27, 0x67, 0x6f, 0x2e, 0x66, 0x31, 0x31, 0x30, 0x2e, 0x64, 0x65, 0x76, 0x2f,
	0x6d, 0x6f, 0x6e, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6d, 0x64, 0x2f,
	0x6f, 0x6e, 0x65, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_go_pkg_cmd_onepassword_onepassword_proto_rawDescOnce sync.Once
	file_go_pkg_cmd_onepassword_onepassword_proto_rawDescData = file_go_pkg_cmd_onepassword_onepassword_proto_rawDesc
)

func file_go_pkg_cmd_onepassword_onepassword_proto_rawDescGZIP() []byte {
	file_go_pkg_cmd_onepassword_onepassword_proto_rawDescOnce.Do(func() {
		file_go_pkg_cmd_onepassword_onepassword_proto_rawDescData = protoimpl.X.CompressGZIP(file_go_pkg_cmd_onepassword_onepassword_proto_rawDescData)
	})
	return file_go_pkg_cmd_onepassword_onepassword_proto_rawDescData
}

var file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_go_pkg_cmd_onepassword_onepassword_proto_goTypes = []interface{}{
	(*Item)(nil),                  // 0: mono.onepassword.Item
	(*RequestUnlock)(nil),         // 1: mono.onepassword.RequestUnlock
	(*ResponseUnlock)(nil),        // 2: mono.onepassword.ResponseUnlock
	(*RequestLock)(nil),           // 3: mono.onepassword.RequestLock
	(*ResponseLock)(nil),          // 4: mono.onepassword.ResponseLock
	(*RequestUseVault)(nil),       // 5: mono.onepassword.RequestUseVault
	(*ResponseUseVault)(nil),      // 6: mono.onepassword.ResponseUseVault
	(*RequestInfo)(nil),           // 7: mono.onepassword.RequestInfo
	(*ResponseInfo)(nil),          // 8: mono.onepassword.ResponseInfo
	(*RequestList)(nil),           // 9: mono.onepassword.RequestList
	(*ResponseList)(nil),          // 10: mono.onepassword.ResponseList
	(*RequestGet)(nil),            // 11: mono.onepassword.RequestGet
	(*ResponseGet)(nil),           // 12: mono.onepassword.ResponseGet
	(*RequestSetClipboard)(nil),   // 13: mono.onepassword.RequestSetClipboard
	(*ResponseSetClipboard)(nil),  // 14: mono.onepassword.ResponseSetClipboard
	(*timestamppb.Timestamp)(nil), // 15: google.protobuf.Timestamp
}
var file_go_pkg_cmd_onepassword_onepassword_proto_depIdxs = []int32{
	15, // 0: mono.onepassword.Item.created_at:type_name -> google.protobuf.Timestamp
	15, // 1: mono.onepassword.Item.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: mono.onepassword.ResponseList.items:type_name -> mono.onepassword.Item
	0,  // 3: mono.onepassword.ResponseGet.item:type_name -> mono.onepassword.Item
	1,  // 4: mono.onepassword.OnePassword.Unlock:input_type -> mono.onepassword.RequestUnlock
	3,  // 5: mono.onepassword.OnePassword.Lock:input_type -> mono.onepassword.RequestLock
	5,  // 6: mono.onepassword.OnePassword.UseVault:input_type -> mono.onepassword.RequestUseVault
	7,  // 7: mono.onepassword.OnePassword.Info:input_type -> mono.onepassword.RequestInfo
	9,  // 8: mono.onepassword.OnePassword.List:input_type -> mono.onepassword.RequestList
	11, // 9: mono.onepassword.OnePassword.Get:input_type -> mono.onepassword.RequestGet
	13, // 10: mono.onepassword.OnePassword.SetClipboard:input_type -> mono.onepassword.RequestSetClipboard
	2,  // 11: mono.onepassword.OnePassword.Unlock:output_type -> mono.onepassword.ResponseUnlock
	4,  // 12: mono.onepassword.OnePassword.Lock:output_type -> mono.onepassword.ResponseLock
	6,  // 13: mono.onepassword.OnePassword.UseVault:output_type -> mono.onepassword.ResponseUseVault
	8,  // 14: mono.onepassword.OnePassword.Info:output_type -> mono.onepassword.ResponseInfo
	10, // 15: mono.onepassword.OnePassword.List:output_type -> mono.onepassword.ResponseList
	12, // 16: mono.onepassword.OnePassword.Get:output_type -> mono.onepassword.ResponseGet
	14, // 17: mono.onepassword.OnePassword.SetClipboard:output_type -> mono.onepassword.ResponseSetClipboard
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_go_pkg_cmd_onepassword_onepassword_proto_init() }
func file_go_pkg_cmd_onepassword_onepassword_proto_init() {
	if File_go_pkg_cmd_onepassword_onepassword_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUnlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUnlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestUseVault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUseVault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestSetClipboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseSetClipboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_go_pkg_cmd_onepassword_onepassword_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_go_pkg_cmd_onepassword_onepassword_proto_goTypes,
		DependencyIndexes: file_go_pkg_cmd_onepassword_onepassword_proto_depIdxs,
		MessageInfos:      file_go_pkg_cmd_onepassword_onepassword_proto_msgTypes,
	}.Build()
	File_go_pkg_cmd_onepassword_onepassword_proto = out.File
	file_go_pkg_cmd_onepassword_onepassword_proto_rawDesc = nil
	file_go_pkg_cmd_onepassword_onepassword_proto_goTypes = nil
	file_go_pkg_cmd_onepassword_onepassword_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OnePasswordClient is the client API for OnePassword service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OnePasswordClient interface {
	Unlock(ctx context.Context, in *RequestUnlock, opts ...grpc.CallOption) (*ResponseUnlock, error)
	Lock(ctx context.Context, in *RequestLock, opts ...grpc.CallOption) (*ResponseLock, error)
	UseVault(ctx context.Context, in *RequestUseVault, opts ...grpc.CallOption) (*ResponseUseVault, error)
	Info(ctx context.Context, in *RequestInfo, opts ...grpc.CallOption) (*ResponseInfo, error)
	List(ctx context.Context, in *RequestList, opts ...grpc.CallOption) (*ResponseList, error)
	Get(ctx context.Context, in *RequestGet, opts ...grpc.CallOption) (*ResponseGet, error)
	SetClipboard(ctx context.Context, in *RequestSetClipboard, opts ...grpc.CallOption) (*ResponseSetClipboard, error)
}

type onePasswordClient struct {
	cc grpc.ClientConnInterface
}

func NewOnePasswordClient(cc grpc.ClientConnInterface) OnePasswordClient {
	return &onePasswordClient{cc}
}

func (c *onePasswordClient) Unlock(ctx context.Context, in *RequestUnlock, opts ...grpc.CallOption) (*ResponseUnlock, error) {
	out := new(ResponseUnlock)
	err := c.cc.Invoke(ctx, "/mono.onepassword.OnePassword/Unlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onePasswordClient) Lock(ctx context.Context, in *RequestLock, opts ...grpc.CallOption) (*ResponseLock, error) {
	out := new(ResponseLock)
	err := c.cc.Invoke(ctx, "/mono.onepassword.OnePassword/Lock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onePasswordClient) UseVault(ctx context.Context, in *RequestUseVault, opts ...grpc.CallOption) (*ResponseUseVault, error) {
	out := new(ResponseUseVault)
	err := c.cc.Invoke(ctx, "/mono.onepassword.OnePassword/UseVault", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onePasswordClient) Info(ctx context.Context, in *RequestInfo, opts ...grpc.CallOption) (*ResponseInfo, error) {
	out := new(ResponseInfo)
	err := c.cc.Invoke(ctx, "/mono.onepassword.OnePassword/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onePasswordClient) List(ctx context.Context, in *RequestList, opts ...grpc.CallOption) (*ResponseList, error) {
	out := new(ResponseList)
	err := c.cc.Invoke(ctx, "/mono.onepassword.OnePassword/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onePasswordClient) Get(ctx context.Context, in *RequestGet, opts ...grpc.CallOption) (*ResponseGet, error) {
	out := new(ResponseGet)
	err := c.cc.Invoke(ctx, "/mono.onepassword.OnePassword/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onePasswordClient) SetClipboard(ctx context.Context, in *RequestSetClipboard, opts ...grpc.CallOption) (*ResponseSetClipboard, error) {
	out := new(ResponseSetClipboard)
	err := c.cc.Invoke(ctx, "/mono.onepassword.OnePassword/SetClipboard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnePasswordServer is the server API for OnePassword service.
type OnePasswordServer interface {
	Unlock(context.Context, *RequestUnlock) (*ResponseUnlock, error)
	Lock(context.Context, *RequestLock) (*ResponseLock, error)
	UseVault(context.Context, *RequestUseVault) (*ResponseUseVault, error)
	Info(context.Context, *RequestInfo) (*ResponseInfo, error)
	List(context.Context, *RequestList) (*ResponseList, error)
	Get(context.Context, *RequestGet) (*ResponseGet, error)
	SetClipboard(context.Context, *RequestSetClipboard) (*ResponseSetClipboard, error)
}

// UnimplementedOnePasswordServer can be embedded to have forward compatible implementations.
type UnimplementedOnePasswordServer struct {
}

func (*UnimplementedOnePasswordServer) Unlock(context.Context, *RequestUnlock) (*ResponseUnlock, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unlock not implemented")
}
func (*UnimplementedOnePasswordServer) Lock(context.Context, *RequestLock) (*ResponseLock, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lock not implemented")
}
func (*UnimplementedOnePasswordServer) UseVault(context.Context, *RequestUseVault) (*ResponseUseVault, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UseVault not implemented")
}
func (*UnimplementedOnePasswordServer) Info(context.Context, *RequestInfo) (*ResponseInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}
func (*UnimplementedOnePasswordServer) List(context.Context, *RequestList) (*ResponseList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedOnePasswordServer) Get(context.Context, *RequestGet) (*ResponseGet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedOnePasswordServer) SetClipboard(context.Context, *RequestSetClipboard) (*ResponseSetClipboard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetClipboard not implemented")
}

func RegisterOnePasswordServer(s *grpc.Server, srv OnePasswordServer) {
	s.RegisterService(&_OnePassword_serviceDesc, srv)
}

func _OnePassword_Unlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUnlock)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnePasswordServer).Unlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mono.onepassword.OnePassword/Unlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnePasswordServer).Unlock(ctx, req.(*RequestUnlock))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnePassword_Lock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestLock)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnePasswordServer).Lock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mono.onepassword.OnePassword/Lock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnePasswordServer).Lock(ctx, req.(*RequestLock))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnePassword_UseVault_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestUseVault)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnePasswordServer).UseVault(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mono.onepassword.OnePassword/UseVault",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnePasswordServer).UseVault(ctx, req.(*RequestUseVault))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnePassword_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnePasswordServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mono.onepassword.OnePassword/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnePasswordServer).Info(ctx, req.(*RequestInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnePassword_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnePasswordServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mono.onepassword.OnePassword/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnePasswordServer).List(ctx, req.(*RequestList))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnePassword_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnePasswordServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mono.onepassword.OnePassword/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnePasswordServer).Get(ctx, req.(*RequestGet))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnePassword_SetClipboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestSetClipboard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnePasswordServer).SetClipboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mono.onepassword.OnePassword/SetClipboard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnePasswordServer).SetClipboard(ctx, req.(*RequestSetClipboard))
	}
	return interceptor(ctx, in, info, handler)
}

var _OnePassword_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mono.onepassword.OnePassword",
	HandlerType: (*OnePasswordServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Unlock",
			Handler:    _OnePassword_Unlock_Handler,
		},
		{
			MethodName: "Lock",
			Handler:    _OnePassword_Lock_Handler,
		},
		{
			MethodName: "UseVault",
			Handler:    _OnePassword_UseVault_Handler,
		},
		{
			MethodName: "Info",
			Handler:    _OnePassword_Info_Handler,
		},
		{
			MethodName: "List",
			Handler:    _OnePassword_List_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _OnePassword_Get_Handler,
		},
		{
			MethodName: "SetClipboard",
			Handler:    _OnePassword_SetClipboard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go/pkg/cmd/onepassword/onepassword.proto",
}
