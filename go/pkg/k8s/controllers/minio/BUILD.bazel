load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "minio",
    srcs = [
        "minio_bucket.go",
        "minio_user.go",
    ],
    importpath = "go.f110.dev/mono/go/pkg/k8s/controllers/minio",
    visibility = ["//visibility:public"],
    deps = [
        "//go/api/miniov1alpha1",
        "//go/fsm",
        "//go/k8s/client",
        "//go/logger",
        "//go/pkg/k8s/controllers/controllerutil",
        "//go/stringsutil",
        "//vendor/github.com/hashicorp/vault/api",
        "//vendor/github.com/minio/minio-go/v6:minio-go",
        "//vendor/github.com/minio/minio-go/v6/pkg/policy",
        "//vendor/github.com/minio/minio-operator/pkg/apis/miniocontroller/v1beta1",
        "//vendor/github.com/minio/minio/pkg/madmin",
        "//vendor/go.f110.dev/xerrors",
        "//vendor/go.uber.org/zap",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/apimachinery/pkg/api/errors",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/labels",
        "//vendor/k8s.io/apimachinery/pkg/runtime",
        "//vendor/k8s.io/client-go/informers",
        "//vendor/k8s.io/client-go/kubernetes",
        "//vendor/k8s.io/client-go/listers/core/v1:core",
        "//vendor/k8s.io/client-go/rest",
        "//vendor/k8s.io/client-go/tools/cache",
        "//vendor/k8s.io/client-go/tools/portforward",
        "//vendor/k8s.io/client-go/transport/spdy",
    ],
)

go_test(
    name = "minio_test",
    srcs = [
        "minio_bucket_test.go",
        "minio_user_test.go",
        "util_test.go",
    ],
    embed = [":minio"],
    deps = [
        "//go/api/miniov1alpha1",
        "//go/k8s/controllers/controllertest",
        "//vendor/github.com/hashicorp/vault/api",
        "//vendor/github.com/jarcoal/httpmock",
        "//vendor/github.com/minio/minio-go/v6:minio-go",
        "//vendor/github.com/minio/minio-operator/pkg/apis/miniocontroller/v1beta1",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/runtime",
    ],
)
