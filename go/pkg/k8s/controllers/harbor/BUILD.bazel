load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "harbor",
    srcs = [
        "docker.go",
        "harbor_project_controller.go",
        "robot_account_controller.go",
    ],
    importpath = "go.f110.dev/mono/go/pkg/k8s/controllers/harbor",
    visibility = ["//visibility:public"],
    deps = [
        "//go/api/harborv1alpha1",
        "//go/harbor",
        "//go/k8s/client",
        "//go/logger",
        "//go/k8s/controllers/controllerutil",
        "//vendor/go.f110.dev/xerrors",
        "//vendor/go.uber.org/zap",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/apimachinery/pkg/api/errors",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/labels",
        "//vendor/k8s.io/apimachinery/pkg/runtime",
        "//vendor/k8s.io/client-go/kubernetes",
        "//vendor/k8s.io/client-go/rest",
        "//vendor/k8s.io/client-go/tools/cache",
        "//vendor/k8s.io/client-go/tools/portforward",
        "//vendor/k8s.io/client-go/transport/spdy",
    ],
)

go_test(
    name = "harbor_test",
    srcs = [
        "project_controller_test.go",
        "robot_account_controller_test.go",
    ],
    embed = [":harbor"],
    deps = [
        "//go/api/harborv1alpha1",
        "//go/harbor",
        "//go/http/mockutil",
        "//go/k8s/controllers/controllertest",
        "//vendor/github.com/jarcoal/httpmock",
        "//vendor/github.com/stretchr/testify/require",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/runtime",
    ],
)
