load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "gomodule",
    srcs = [
        "authn.go",
        "cache.go",
        "config.go",
        "fetcher.go",
        "proxy.go",
        "server.go",
    ],
    importpath = "go.f110.dev/mono/go/gomodule",
    visibility = ["//visibility:public"],
    deps = [
        "//go/githubutil",
        "//go/logger",
        "//go/regexp/regexputil",
        "//go/storage",
        "//go/stringsutil",
        "@com_github_go_git_go_git_v5//:go-git",
        "@com_github_go_git_go_git_v5//plumbing",
        "@com_github_go_git_go_git_v5//plumbing/filemode",
        "@com_github_go_git_go_git_v5//plumbing/object",
        "@com_github_go_git_go_git_v5//plumbing/transport/http",
        "@com_github_golang_jwt_jwt_v5//:jwt",
        "@com_github_google_go_github_v49//github",
        "@com_github_google_go_github_v73//github",
        "@com_github_google_uuid//:uuid",
        "@com_github_gorilla_mux//:mux",
        "@dev_f110_go_go_memcached//client",
        "@dev_f110_go_go_memcached//errors",
        "@dev_f110_go_xerrors//:xerrors",
        "@in_gopkg_yaml_v3//:yaml_v3",
        "@org_golang_x_mod//modfile",
        "@org_golang_x_mod//module",
        "@org_golang_x_mod//semver",
        "@org_golang_x_mod//zip",
        "@org_golang_x_tools_go_vcs//:vcs",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "gomodule_test",
    srcs = [
        "fetcher_test.go",
        "proxy_test.go",
    ],
    embed = [":gomodule"],
    deps = [
        "@com_github_go_git_go_git_v5//:go-git",
        "@com_github_go_git_go_git_v5//plumbing/object",
        "@com_github_stretchr_testify//assert",
        "@com_github_stretchr_testify//require",
    ],
)
