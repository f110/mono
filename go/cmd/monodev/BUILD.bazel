load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")

go_library(
    name = "monodev_lib",
    srcs = [
        "cluster.go",
        "component.go",
        "devenv.go",
        "graph.go",
        "main.go",
        "manager.go",
    ],
    importpath = "go.f110.dev/mono/go/cmd/monodev",
    visibility = ["//visibility:private"],
    deps = [
        "//go/docutil",
        "//go/fsm",
        "//go/pkg/git",
        "//go/pkg/grpcutil",
        "//go/pkg/k8s/kind",
        "//go/pkg/logger",
        "//go/pkg/parallel",
        "//go/pkg/storage",
        "//vendor/github.com/go-git/go-git/v5:go-git",
        "//vendor/github.com/go-git/go-git/v5/plumbing",
        "//vendor/github.com/go-git/go-git/v5/plumbing/transport",
        "//vendor/github.com/go-git/go-git/v5/plumbing/transport/http",
        "//vendor/github.com/go-sql-driver/mysql",
        "//vendor/github.com/spf13/cobra",
        "//vendor/github.com/spf13/pflag",
        "//vendor/go.f110.dev/go-memcached/client",
        "//vendor/go.f110.dev/xerrors",
        "//vendor/go.uber.org/zap",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/credentials/insecure",
        "//vendor/k8s.io/api/apps/v1:apps",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1/unstructured",
        "//vendor/k8s.io/apimachinery/pkg/runtime",
        "//vendor/k8s.io/apimachinery/pkg/types",
        "//vendor/k8s.io/apimachinery/pkg/util/yaml",
        "//vendor/k8s.io/client-go/kubernetes",
    ],
)

go_binary(
    name = "monodev",
    embed = [":monodev_lib"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "monodev_test",
    srcs = ["devenv_test.go"],
    embed = [":monodev_lib"],
    deps = ["//vendor/github.com/stretchr/testify/assert"],
)
