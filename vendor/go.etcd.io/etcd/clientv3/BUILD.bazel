load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "clientv3",
    srcs = [
        "auth.go",
        "client.go",
        "cluster.go",
        "compact_op.go",
        "compare.go",
        "config.go",
        "ctx.go",
        "doc.go",
        "kv.go",
        "lease.go",
        "logger.go",
        "maintenance.go",
        "op.go",
        "options.go",
        "retry.go",
        "retry_interceptor.go",
        "sort.go",
        "txn.go",
        "utils.go",
        "watch.go",
    ],
    importmap = "go.f110.dev/mono/vendor/go.etcd.io/etcd/clientv3",
    importpath = "go.etcd.io/etcd/clientv3",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/google/uuid",
        "//vendor/go.etcd.io/etcd/auth/authpb",
        "//vendor/go.etcd.io/etcd/clientv3/balancer",
        "//vendor/go.etcd.io/etcd/clientv3/balancer/picker",
        "//vendor/go.etcd.io/etcd/clientv3/balancer/resolver/endpoint",
        "//vendor/go.etcd.io/etcd/clientv3/credentials",
        "//vendor/go.etcd.io/etcd/etcdserver/api/v3rpc/rpctypes",
        "//vendor/go.etcd.io/etcd/etcdserver/etcdserverpb",
        "//vendor/go.etcd.io/etcd/mvcc/mvccpb",
        "//vendor/go.etcd.io/etcd/pkg/logutil",
        "//vendor/go.etcd.io/etcd/pkg/types",
        "//vendor/go.etcd.io/etcd/version",
        "//vendor/go.uber.org/zap",
        "//vendor/google.golang.org/grpc",
        "//vendor/google.golang.org/grpc/codes",
        "//vendor/google.golang.org/grpc/credentials",
        "//vendor/google.golang.org/grpc/grpclog",
        "//vendor/google.golang.org/grpc/keepalive",
        "//vendor/google.golang.org/grpc/metadata",
        "//vendor/google.golang.org/grpc/status",
    ],
)
