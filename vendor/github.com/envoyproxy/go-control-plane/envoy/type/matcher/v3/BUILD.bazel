load("@rules_go//go:def.bzl", "go_library")

go_library(
    name = "matcher",
    srcs = [
        "filter_state.pb.go",
        "filter_state.pb.validate.go",
        "http_inputs.pb.go",
        "http_inputs.pb.validate.go",
        "metadata.pb.go",
        "metadata.pb.validate.go",
        "node.pb.go",
        "node.pb.validate.go",
        "number.pb.go",
        "number.pb.validate.go",
        "path.pb.go",
        "path.pb.validate.go",
        "regex.pb.go",
        "regex.pb.validate.go",
        "status_code_input.pb.go",
        "status_code_input.pb.validate.go",
        "string.pb.go",
        "string.pb.validate.go",
        "struct.pb.go",
        "struct.pb.validate.go",
        "value.pb.go",
        "value.pb.validate.go",
    ],
    importmap = "go.f110.dev/mono/vendor/github.com/envoyproxy/go-control-plane/envoy/type/matcher/v3",
    importpath = "github.com/envoyproxy/go-control-plane/envoy/type/matcher/v3",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/cncf/xds/go/udpa/annotations",
        "//vendor/github.com/cncf/xds/go/xds/core/v3:core",
        "//vendor/github.com/envoyproxy/go-control-plane/envoy/annotations",
        "//vendor/github.com/envoyproxy/go-control-plane/envoy/type/v3:type",
        "//vendor/github.com/envoyproxy/protoc-gen-validate/validate",
        "//vendor/google.golang.org/protobuf/reflect/protoreflect",
        "//vendor/google.golang.org/protobuf/runtime/protoimpl",
        "//vendor/google.golang.org/protobuf/types/known/anypb",
        "//vendor/google.golang.org/protobuf/types/known/wrapperspb",
    ],
)
