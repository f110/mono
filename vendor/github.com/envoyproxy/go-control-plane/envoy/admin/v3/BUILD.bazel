load("@rules_go//go:def.bzl", "go_library")

go_library(
    name = "admin",
    srcs = [
        "certs.pb.go",
        "certs.pb.validate.go",
        "clusters.pb.go",
        "clusters.pb.validate.go",
        "config_dump.pb.go",
        "config_dump.pb.validate.go",
        "config_dump_shared.pb.go",
        "config_dump_shared.pb.validate.go",
        "init_dump.pb.go",
        "init_dump.pb.validate.go",
        "listeners.pb.go",
        "listeners.pb.validate.go",
        "memory.pb.go",
        "memory.pb.validate.go",
        "metrics.pb.go",
        "metrics.pb.validate.go",
        "mutex_stats.pb.go",
        "mutex_stats.pb.validate.go",
        "server_info.pb.go",
        "server_info.pb.validate.go",
        "tap.pb.go",
        "tap.pb.validate.go",
    ],
    importmap = "go.f110.dev/mono/vendor/github.com/envoyproxy/go-control-plane/envoy/admin/v3",
    importpath = "github.com/envoyproxy/go-control-plane/envoy/admin/v3",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/cncf/xds/go/udpa/annotations",
        "//vendor/github.com/envoyproxy/go-control-plane/envoy/config/bootstrap/v3:bootstrap",
        "//vendor/github.com/envoyproxy/go-control-plane/envoy/config/cluster/v3:cluster",
        "//vendor/github.com/envoyproxy/go-control-plane/envoy/config/core/v3:core",
        "//vendor/github.com/envoyproxy/go-control-plane/envoy/config/tap/v3:tap",
        "//vendor/github.com/envoyproxy/go-control-plane/envoy/type/v3:type",
        "//vendor/github.com/envoyproxy/protoc-gen-validate/validate",
        "//vendor/google.golang.org/protobuf/reflect/protoreflect",
        "//vendor/google.golang.org/protobuf/runtime/protoimpl",
        "//vendor/google.golang.org/protobuf/types/known/anypb",
        "//vendor/google.golang.org/protobuf/types/known/durationpb",
        "//vendor/google.golang.org/protobuf/types/known/timestamppb",
    ],
)
