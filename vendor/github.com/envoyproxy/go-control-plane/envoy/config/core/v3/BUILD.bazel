load("@rules_go//go:def.bzl", "go_library")

go_library(
    name = "core",
    srcs = [
        "address.pb.go",
        "address.pb.validate.go",
        "backoff.pb.go",
        "backoff.pb.validate.go",
        "base.pb.go",
        "base.pb.validate.go",
        "config_source.pb.go",
        "config_source.pb.validate.go",
        "event_service_config.pb.go",
        "event_service_config.pb.validate.go",
        "extension.pb.go",
        "extension.pb.validate.go",
        "grpc_method_list.pb.go",
        "grpc_method_list.pb.validate.go",
        "grpc_service.pb.go",
        "grpc_service.pb.validate.go",
        "health_check.pb.go",
        "health_check.pb.validate.go",
        "http_service.pb.go",
        "http_service.pb.validate.go",
        "http_uri.pb.go",
        "http_uri.pb.validate.go",
        "protocol.pb.go",
        "protocol.pb.validate.go",
        "proxy_protocol.pb.go",
        "proxy_protocol.pb.validate.go",
        "resolver.pb.go",
        "resolver.pb.validate.go",
        "socket_option.pb.go",
        "socket_option.pb.validate.go",
        "substitution_format_string.pb.go",
        "substitution_format_string.pb.validate.go",
        "udp_socket_config.pb.go",
        "udp_socket_config.pb.validate.go",
    ],
    importmap = "go.f110.dev/mono/vendor/github.com/envoyproxy/go-control-plane/envoy/config/core/v3",
    importpath = "github.com/envoyproxy/go-control-plane/envoy/config/core/v3",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/cncf/xds/go/udpa/annotations",
        "//vendor/github.com/cncf/xds/go/xds/annotations/v3:annotations",
        "//vendor/github.com/cncf/xds/go/xds/core/v3:core",
        "//vendor/github.com/envoyproxy/go-control-plane/envoy/annotations",
        "//vendor/github.com/envoyproxy/go-control-plane/envoy/type/matcher/v3:matcher",
        "//vendor/github.com/envoyproxy/go-control-plane/envoy/type/v3:type",
        "//vendor/github.com/envoyproxy/protoc-gen-validate/validate",
        "//vendor/google.golang.org/protobuf/reflect/protoreflect",
        "//vendor/google.golang.org/protobuf/runtime/protoimpl",
        "//vendor/google.golang.org/protobuf/types/known/anypb",
        "//vendor/google.golang.org/protobuf/types/known/durationpb",
        "//vendor/google.golang.org/protobuf/types/known/emptypb",
        "//vendor/google.golang.org/protobuf/types/known/structpb",
        "//vendor/google.golang.org/protobuf/types/known/wrapperspb",
    ],
)
