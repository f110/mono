load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "trace",
    srcs = [
        "datadog.pb.go",
        "datadog.pb.validate.go",
        "dynamic_ot.pb.go",
        "dynamic_ot.pb.validate.go",
        "http_tracer.pb.go",
        "http_tracer.pb.validate.go",
        "lightstep.pb.go",
        "lightstep.pb.validate.go",
        "opencensus.pb.go",
        "opencensus.pb.validate.go",
        "opentelemetry.pb.go",
        "opentelemetry.pb.validate.go",
        "service.pb.go",
        "service.pb.validate.go",
        "skywalking.pb.go",
        "skywalking.pb.validate.go",
        "trace.pb.go",
        "trace.pb.validate.go",
        "xray.pb.go",
        "xray.pb.validate.go",
        "zipkin.pb.go",
        "zipkin.pb.validate.go",
    ],
    importmap = "go.f110.dev/mono/vendor/github.com/envoyproxy/go-control-plane/envoy/config/trace/v3",
    importpath = "github.com/envoyproxy/go-control-plane/envoy/config/trace/v3",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/census-instrumentation/opencensus-proto/gen-go/trace/v1:trace",
        "//vendor/github.com/cncf/xds/go/udpa/annotations",
        "//vendor/github.com/envoyproxy/go-control-plane/envoy/annotations",
        "//vendor/github.com/envoyproxy/go-control-plane/envoy/config/core/v3:core",
        "//vendor/github.com/envoyproxy/protoc-gen-validate/validate:validate_go",
        "//vendor/google.golang.org/protobuf/reflect/protoreflect",
        "//vendor/google.golang.org/protobuf/runtime/protoimpl",
        "//vendor/google.golang.org/protobuf/types/known/anypb",
        "//vendor/google.golang.org/protobuf/types/known/durationpb",
        "//vendor/google.golang.org/protobuf/types/known/structpb",
        "//vendor/google.golang.org/protobuf/types/known/wrapperspb",
    ],
)
