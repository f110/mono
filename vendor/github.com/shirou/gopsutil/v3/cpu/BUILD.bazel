load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "cpu",
    srcs = [
        "cpu.go",
        "cpu_darwin.go",
        "cpu_darwin_cgo.go",
        "cpu_darwin_nocgo.go",
        "cpu_dragonfly.go",
        "cpu_dragonfly_amd64.go",
        "cpu_fallback.go",
        "cpu_freebsd.go",
        "cpu_freebsd_386.go",
        "cpu_freebsd_amd64.go",
        "cpu_freebsd_arm.go",
        "cpu_freebsd_arm64.go",
        "cpu_linux.go",
        "cpu_openbsd.go",
        "cpu_solaris.go",
        "cpu_windows.go",
    ],
    cgo = True,
    importmap = "go.f110.dev/mono/vendor/github.com/shirou/gopsutil/v3/cpu",
    importpath = "github.com/shirou/gopsutil/v3/cpu",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/shirou/gopsutil/v3/internal/common",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "//vendor/github.com/tklauser/go-sysconf",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "//vendor/github.com/tklauser/go-sysconf",
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "//vendor/github.com/tklauser/go-sysconf",
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "//vendor/github.com/tklauser/go-sysconf",
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:ios": [
            "//vendor/github.com/tklauser/go-sysconf",
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "//vendor/github.com/tklauser/go-sysconf",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "//vendor/github.com/tklauser/go-sysconf",
            "//vendor/golang.org/x/sys/unix",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "//vendor/github.com/tklauser/go-sysconf",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "//vendor/github.com/StackExchange/wmi",
            "//vendor/golang.org/x/sys/windows",
        ],
        "//conditions:default": [],
    }),
)
