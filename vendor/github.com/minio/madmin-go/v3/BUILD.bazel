load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "madmin-go",
    srcs = [
        "anonymous-api.go",
        "api.go",
        "api-error-response.go",
        "api-log.go",
        "api-log-entry.go",
        "auth.go",
        "bandwidth.go",
        "batch-job.go",
        "bucket-metadata.go",
        "cluster-commands.go",
        "cluster-health.go",
        "config-commands.go",
        "config-help-commands.go",
        "config-history-commands.go",
        "config-kv-commands.go",
        "cpu_linux.go",
        "cpu_nolinux.go",
        "decommission-commands.go",
        "encrypt.go",
        "group-commands.go",
        "heal-commands.go",
        "health.go",
        "health-old.go",
        "iam-migrate.go",
        "idp-commands.go",
        "info-commands.go",
        "inspect.go",
        "kms-commands.go",
        "metrics.go",
        "metrics_client.go",
        "net_linux.go",
        "net_nolinux.go",
        "no_fips.go",
        "parse-config.go",
        "perf-client.go",
        "perf-drive.go",
        "perf-net.go",
        "perf-object.go",
        "perf-site-replication.go",
        "policy-commands.go",
        "profiling-commands.go",
        "prometheus_metrics.go",
        "quota-commands.go",
        "rebalance.go",
        "register.go",
        "remote-target-commands.go",
        "replication-api.go",
        "replication-api_gen.go",
        "retry.go",
        "scanner.go",
        "service-commands.go",
        "service-commands-v1.go",
        "tier.go",
        "tier-azure.go",
        "tier-azure_gen.go",
        "tier-config.go",
        "tier-config_gen.go",
        "tier-gcs.go",
        "tier-gcs_gen.go",
        "tier-minio.go",
        "tier-minio_gen.go",
        "tier-s3.go",
        "tier-s3_gen.go",
        "timings.go",
        "top-commands.go",
        "trace.go",
        "tracetype_string.go",
        "transport.go",
        "update-commands.go",
        "user-commands.go",
        "utils.go",
    ],
    importmap = "go.f110.dev/mono/vendor/github.com/minio/madmin-go/v3",
    importpath = "github.com/minio/madmin-go/v3",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/dustin/go-humanize",
        "//vendor/github.com/golang-jwt/jwt/v4:jwt",
        "//vendor/github.com/minio/madmin-go/v3/cgroup",
        "//vendor/github.com/minio/madmin-go/v3/kernel",
        "//vendor/github.com/minio/minio-go/v7/pkg/credentials",
        "//vendor/github.com/minio/minio-go/v7/pkg/replication",
        "//vendor/github.com/minio/minio-go/v7/pkg/s3utils",
        "//vendor/github.com/minio/minio-go/v7/pkg/set",
        "//vendor/github.com/minio/minio-go/v7/pkg/signer",
        "//vendor/github.com/minio/minio-go/v7/pkg/tags",
        "//vendor/github.com/prometheus/common/expfmt",
        "//vendor/github.com/prometheus/procfs",
        "//vendor/github.com/prometheus/prom2json",
        "//vendor/github.com/secure-io/sio-go",
        "//vendor/github.com/secure-io/sio-go/sioutil",
        "//vendor/github.com/shirou/gopsutil/v3/cpu",
        "//vendor/github.com/shirou/gopsutil/v3/disk",
        "//vendor/github.com/shirou/gopsutil/v3/host",
        "//vendor/github.com/shirou/gopsutil/v3/load",
        "//vendor/github.com/shirou/gopsutil/v3/mem",
        "//vendor/github.com/shirou/gopsutil/v3/process",
        "//vendor/github.com/tinylib/msgp/msgp",
        "//vendor/golang.org/x/crypto/argon2",
        "//vendor/golang.org/x/crypto/pbkdf2",
        "//vendor/golang.org/x/net/publicsuffix",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "//vendor/github.com/prometheus/procfs/sysfs",
            "//vendor/github.com/safchain/ethtool",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "//vendor/github.com/prometheus/procfs/sysfs",
            "//vendor/github.com/safchain/ethtool",
        ],
        "//conditions:default": [],
    }),
)
