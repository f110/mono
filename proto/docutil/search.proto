syntax = "proto3";
package mono.docutil;
option  go_package = "go.f110.dev/mono/go/pkg/docutil";

service DocSearch {
  rpc AvailableFeatures(RequestAvailableFeatures) returns (ResponseAvailableFeatures);
  rpc ListRepository(RequestListRepository) returns (ResponseListRepository);
  rpc GetRepository(RequestGetRepository) returns (ResponseGetRepository);
  rpc GetPage(RequestGetPage) returns (ResponseGetPage);
  rpc PageLink(RequestPageLink) returns (ResponsePageLink);
  rpc GetDirectory(RequestGetDirectory) returns (ResponseGetDirectory);
}

message RequestAvailableFeatures {}

message ResponseAvailableFeatures {
  bool page_link        = 1;
  bool full_text_search = 2;
}

message RequestListRepository {}

message ResponseListRepository {
  repeated Repository repositories = 1;
}

message RequestGetRepository {
  string repo = 1;
}

message ResponseGetRepository {
  Repository repository = 1;
}

message Repository {
  string name           = 1;
  string default_branch = 2;
}

message RequestGetPage {
  string repo = 1;
  string path = 2;
}

message ResponseGetPage {
  string            title = 1;
  string            doc   = 2;
  repeated PageLink in    = 3;
  repeated PageLink out   = 4;
}

enum LinkType {
  LINK_TYPE_EXTERNAL            = 0;
  LINK_TYPE_IN_REPOSITORY       = 1;
  LINK_TYPE_NEIGHBOR_REPOSITORY = 2;
}

message PageLink {
  LinkType type        = 1;
  string   source      = 2;
  string   destination = 3;
  string   repository  = 4;
  string   title       = 5;
}

message RequestPageLink {
  string repo = 1;
  string sha  = 2;
}

message ResponsePageLink {
  repeated PageLink in  = 1;
  repeated PageLink out = 2;
}

message RequestGetDirectory {
  string repo = 1;
  string ref  = 2;
  string path = 3;
}

message ResponseGetDirectory {
  repeated DirectoryEntry entries = 1;
}

message DirectoryEntry {
  string name   = 1;
  string path   = 2;
  bool   is_dir = 3;
}
