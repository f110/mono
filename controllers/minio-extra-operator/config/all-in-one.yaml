apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: miniobuckets.minio.f110.dev
spec:
  group: minio.f110.dev
  names:
    kind: MinIOBucket
    listKind: MinIOBucketList
    plural: miniobuckets
    singular: miniobucket
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              bucketFinalizePolicy:
                description: FinalizePolicy is a policy when deleted CR Object. If
                  FinalizePolicy is an empty string, then it is the same as "keep"
                type: string
              selector:
                description: Selector is a selector of MinioInstance
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
            required:
            - selector
            type: object
          status:
            properties:
              ready:
                type: boolean
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minio-extra-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: minio-extra-operator
rules:
- apiGroups:
  - '*'
  resources:
  - pods
  - secrets
  - services
  verbs:
  - get
- apiGroups:
  - '*'
  resources:
  - pods/portforward
  verbs:
  - create
  - get
  - list
- apiGroups:
  - minio.f110.dev
  resources:
  - miniobuckets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - minio.f110.dev
  resources:
  - miniobuckets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - miniocontroller.min.io
  resources:
  - minioinstances
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: minio-extra-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: minio-extra-operator-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: minio-extra-operator
subjects:
- kind: ServiceAccount
  name: minio-extra-operator
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    controllers: minio-extra-operator
  name: minio-extra-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      controllers: minio-extra-operator
  template:
    metadata:
      labels:
        controllers: minio-extra-operator
    spec:
      containers:
      - args:
        - -lease-lock-name=minio-extra-operator
        - -lease-lock-namespace=$(MY_NAMESPACE)
        - -v=4
        env:
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/f110/minio-extra-operator@sha256:d72e8ac7d6491520fce6c191f3fb031a633baaa7158e4b0f650ca4f4a753684c
        name: operator
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      serviceAccountName: minio-extra-operator
      terminationGracePeriodSeconds: 10
