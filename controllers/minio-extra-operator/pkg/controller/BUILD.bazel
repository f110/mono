load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "controller",
    srcs = ["minio_bucket.go"],
    importpath = "go.f110.dev/mono/controllers/minio-extra-operator/pkg/controller",
    visibility = ["//visibility:public"],
    deps = [
        "//controllers/minio-extra-operator/pkg/api/minio/v1alpha1",
        "//controllers/minio-extra-operator/pkg/client/versioned",
        "//controllers/minio-extra-operator/pkg/informers/externalversions",
        "//controllers/minio-extra-operator/pkg/listers/minio/v1alpha1",
        "//vendor/github.com/minio/minio-go/v6:minio-go",
        "//vendor/github.com/minio/minio-go/v6/pkg/policy",
        "//vendor/github.com/minio/minio-operator/pkg/apis/miniocontroller/v1beta1",
        "//vendor/k8s.io/api/core/v1:core",
        "//vendor/k8s.io/apimachinery/pkg/api/errors",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:meta",
        "//vendor/k8s.io/apimachinery/pkg/labels",
        "//vendor/k8s.io/apimachinery/pkg/util/wait",
        "//vendor/k8s.io/client-go/kubernetes",
        "//vendor/k8s.io/client-go/rest",
        "//vendor/k8s.io/client-go/tools/cache",
        "//vendor/k8s.io/client-go/tools/portforward",
        "//vendor/k8s.io/client-go/transport/spdy",
        "//vendor/k8s.io/client-go/util/workqueue",
        "//vendor/k8s.io/klog",
    ],
)

load("@dev_f110_rules_k8s_controller//k8s:def.bzl", "rbac_gen")

rbac_gen(
    name = "rbac",
    srcs = [":controller"],
    dir = "controllers/minio-extra-operator/config/rbac",
    rolename = "minio-extra-operator",
)
