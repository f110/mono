apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  name: harborprojects.harbor.f110.dev
spec:
  group: harbor.f110.dev
  names:
    kind: HarborProject
    listKind: HarborProjectList
    plural: harborprojects
    singular: harborproject
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Ready
      format: byte
      jsonPath: .status.ready
      name: ready
      type: boolean
    - description: age
      format: date
      jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              public:
                description: Public is an access level of project. If Public sets
                  true, then anyone can read.
                type: boolean
            type: object
          status:
            properties:
              project_id:
                type: integer
              ready:
                type: boolean
              registry:
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  name: harborrobotaccounts.harbor.f110.dev
spec:
  group: harbor.f110.dev
  names:
    kind: HarborRobotAccount
    listKind: HarborRobotAccountList
    plural: harborrobotaccounts
    singular: harborrobotaccount
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Ready
      format: byte
      jsonPath: .status.ready
      name: ready
      type: boolean
    - description: age
      format: date
      jsonPath: .metadata.creationTimestamp
      name: age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              project_name:
                type: string
              project_namespace:
                type: string
              secret_name:
                description: SecretName is a name of docker config secret.
                type: string
            required:
            - project_name
            - project_namespace
            type: object
          status:
            properties:
              ready:
                type: boolean
              robot_id:
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: harbor-project-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: leader-election-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - create
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: harbor-project-operator
rules:
- apiGroups:
  - '*'
  resources:
  - configmaps
  - pods
  - secrets
  - services
  verbs:
  - get
- apiGroups:
  - '*'
  resources:
  - pods
  - services
  verbs:
  - get
- apiGroups:
  - '*'
  resources:
  - pods/portforward
  verbs:
  - create
  - get
  - list
- apiGroups:
  - '*'
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - update
- apiGroups:
  - harbor.f110.dev
  resources:
  - harborprojects
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - harbor.f110.dev
  resources:
  - harborprojects/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - harbor.f110.dev
  resources:
  - harborrobotaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - harbor.f110.dev
  resources:
  - harborrobotaccounts/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: leader-election-role
subjects:
- kind: ServiceAccount
  name: harbor-project-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: harbor-project-operator-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: harbor-project-operator
subjects:
- kind: ServiceAccount
  name: harbor-project-operator
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    controllers: harbor-project-operator
  name: harbor-project-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      controllers: harbor-project-operator
  template:
    metadata:
      labels:
        controllers: harbor-project-operator
    spec:
      containers:
      - args:
        - -lease-lock-name=harbor-project-operator
        - -lease-lock-namespace=$(MY_NAMESPACE)
        - -harbor-namespace=harbor
        - -harbor-service-name=harbor-harbor-core
        - -admin-secret-name=harbor-harbor-core
        - -core-configmap-name=harbor-harbor-core
        - -v=4
        env:
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/f110/harbor-project-operator:latest
        name: operator
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      serviceAccountName: harbor-project-operator
      terminationGracePeriodSeconds: 10
