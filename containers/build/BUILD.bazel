load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")

pkg_tar(
    name = "build_bin",
    srcs = [
        "//go/cmd/build",
        "@dev_f110_protoc_ddl//cmd/migrate",
    ],
    mode = "0755",
    package_dir = "/usr/local/bin",
)

pkg_tar(
    name = "schema_files",
    srcs = ["//go/build/database:schema_txt"],
    mode = "0644",
    package_dir = "/schema",
)

container_image(
    name = "build_image",
    base = "@com_google_distroless_base//image",
    tars = [
        ":build_bin",
        ":schema_files",
    ],
)

container_push(
    name = "push_build",
    format = "Docker",
    image = ":build_image",
    registry = "registry.f110.dev",
    repository = "build/build",
    tag = "latest",
)

pkg_tar(
    name = "sidecar_bin",
    files = {
        "//go/cmd/build-sidecar": "/usr/local/bin/sidecar",
    },
    mode = "0755",
)

container_image(
    name = "sidecar_image",
    base = "@com_google_distroless_base//image",
    entrypoint = ["/usr/local/bin/sidecar"],
    tars = [":sidecar_bin"],
)

container_push(
    name = "push_sidecar",
    format = "Docker",
    image = ":sidecar_image",
    registry = "registry.f110.dev",
    repository = "build/sidecar",
    tag = "latest",
)

pkg_tar(
    name = "ctl_bin",
    srcs = [
        "//go/cmd/buildctl",
    ],
    mode = "0755",
    package_dir = "/usr/local/bin",
)

container_image(
    name = "ctl_image",
    base = "@com_google_distroless_base//image",
    entrypoint = ["/usr/local/bin/buildctl"],
    tars = [":ctl_bin"],
)

container_push(
    name = "push_ctl",
    format = "Docker",
    image = ":ctl_image",
    registry = "registry.f110.dev",
    repository = "build/buildctl",
    tag = "latest",
)
